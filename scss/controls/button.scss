$button-outset: 0 !default;

$button-color: $color-text-diap !default;
$button-background-color: $color-ui-90 !default;
$button-hover-color: $color-text-diap !default;
$button-hover-background-color: $color-ui-200 !default;
$button-focus-box-shadow: inset 0 0 0 ($spacing / 4) $color-primary-400 !default;
$button-active-color: $color-text-diap !default;
$button-active-background-color: $color-ui-400 !default;
$button-outset-box-shadow: 0 $button-outset 0 0 shade($button-background-color, 25%) !default;
$button-disabled-opacity: 0.35 !default;
$button-line-height: $line-height-40 !default;
$button-font-size: $font-size-100 !default;

.button {
	@include font-smoothing;
	display: inline-block;
	padding-top: floor(($control-size-100 - ($font-size-100 * $button-line-height)) / 2); // NOTE: Floor function is added to the padding to ensure the min-height of the button does not exceed the control-size
	padding-right: $spacing * 3;
	padding-bottom: floor(($control-size-100 - ($font-size-100 *  $button-line-height)) / 2); // NOTE: Floor function is added to the padding to ensure the min-height of the button does not exceed the control-size
	padding-left: $spacing * 3;
	min-height: $control-size-100;
	border-radius: $border-radius-100;
	background-color: $button-background-color;
	color: $button-color;
	text-align: center;
	font-size: $button-font-size;
	font-weight: bold;
	line-height: $button-line-height;
	cursor: pointer;

	@if ($button-outset) {
		box-shadow: $button-outset-box-shadow;
	}

	&:hover,
	&.is-hovered {
		background-color: $button-hover-background-color;
		color: $button-hover-color;
	}

	&:focus:not(:hover):not(.is-hovered):not(:active):not(.is-active),
	&.is-focused:not(:hover):not(.is-hovered):not(:active):not(.is-active) {
		@if ($button-outset) {
			box-shadow: $button-focus-box-shadow, $button-outset-box-shadow;
		}
		@else {
			box-shadow: $button-focus-box-shadow;
		}
	}

	&:active,
	&.is-active {
		background-color: $button-active-background-color;
		color: $button-active-color;
		@if ($button-outset) {
			position: relative;
			top: $button-outset;
			box-shadow: none;
		}
	}

	&:disabled,
	&.is-disabled {
		opacity: $button-disabled-opacity;
		cursor: not-allowed;
		pointer-events: none;
	}
}

// Color variations
$button-call-to-action-color: $color-text-diap !default;
$button-call-to-action-background-color: $color-call-to-action-100 !default;
$button-call-to-action-hover-color: $color-text-diap !default;
$button-call-to-action-hover-background-color: $color-call-to-action-200 !default;
$button-call-to-action-focus-box-shadow: inset 0 0 0 ($spacing / 4) $color-call-to-action-400 !default;
$button-call-to-action-active-color: $color-text-diap !default;
$button-call-to-action-active-background-color: $color-call-to-action-300 !default;
$button-call-to-action-outset-box-shadow: 0 $button-outset 0 0 shade($button-call-to-action-background-color, 25%) !default;

.button--call-to-action {
	background-color: $button-call-to-action-background-color;
	color: $button-call-to-action-color;
	@if ($button-outset) {
		box-shadow: $button-call-to-action-outset-box-shadow;
	}

	&:hover,
	&.is-hovered {
		background-color: $button-call-to-action-hover-background-color;
		color: $button-call-to-action-hover-color;
	}

	&:focus:not(:hover):not(.is-hovered):not(:active):not(.is-active),
	&.is-focused:not(:hover):not(.is-hovered):not(:active):not(.is-active) {
		@if $button-outset {
			box-shadow: $button-call-to-action-focus-box-shadow, $button-call-to-action-outset-box-shadow;
		}
		@else {
			box-shadow: $button-call-to-action-focus-box-shadow;
		}
	}

	&:active,
	&.is-active {
		background-color: $button-call-to-action-active-background-color;
		color: $button-call-to-action-active-color;
	}
}

$button-primary-color: $color-text-diap !default;
$button-primary-background-color: $color-primary-100 !default;
$button-primary-box-shadow: 0 ($spacing / 4) 0 0 $color-primary-400 !default;
$button-primary-hover-color: $color-text-diap !default;
$button-primary-hover-background-color: $color-primary-300 !default;
$button-primary-focus-box-shadow: inset 0 0 0 ($spacing / 4) $color-primary-500 !default;
$button-primary-active-color: $color-text-diap !default;
$button-primary-active-background-color: $color-primary-400 !default;
$button-primary-outset-box-shadow: 0 $button-outset 0 0 shade($button-primary-background-color, 25%) !default;

.button--primary {
	background-color: $button-primary-background-color;
	color: $button-primary-color;
	@if ($button-outset) {
		box-shadow: $button-primary-outset-box-shadow;
	}

	&:hover,
	&.is-hovered {
		background-color: $button-primary-hover-background-color;
		color: $button-primary-hover-color;
	}

	&:focus:not(:hover):not(.is-hovered):not(:active):not(.is-active),
	&.is-focused:not(:hover):not(.is-hovered):not(:active):not(.is-active) {
		@if ($button-outset) {
			box-shadow: $button-primary-focus-box-shadow, $button-primary-outset-box-shadow;
		}
		@else {
			box-shadow: $button-primary-focus-box-shadow;
		}
	}

	&:active,
	&.is-active {
		background-color: $button-primary-active-background-color;
		color: $button-primary-active-color;
	}
}

$button-secondary-color: $color-text-diap !default;
$button-secondary-background-color: $color-secondary-100 !default;
$button-secondary-box-shadow: 0 ($spacing / 4) 0 0 $color-secondary-400 !default;
$button-secondary-hover-color: $color-text-diap !default;
$button-secondary-hover-background-color: $color-secondary-200 !default;
$button-secondary-focus-box-shadow: inset 0 0 0 ($spacing / 4) $color-secondary-400 !default;
$button-secondary-active-color: $color-text-diap !default;
$button-secondary-active-background-color: $color-secondary-300 !default;
$button-secondary-outset-box-shadow: 0 $button-outset 0 0 shade($button-secondary-background-color, 25%) !default;

.button--secondary {
	background-color: $button-secondary-background-color;
	color: $button-secondary-color;
	@if ($button-outset) {
		box-shadow: $button-secondary-outset-box-shadow;
	}

	&:hover,
	&.is-hovered {
		background-color: $button-secondary-hover-background-color;
		color: $button-secondary-hover-color;
	}

	&:focus:not(:hover):not(.is-hovered):not(:active):not(.is-active),
	&.is-focused:not(:hover):not(.is-hovered):not(:active):not(.is-active) {
		@if ($button-outset) {
			box-shadow: $button-secondary-focus-box-shadow, $button-secondary-outset-box-shadow;
		}
		@else {
			box-shadow: $button-secondary-focus-box-shadow;
		}
	}

	&:active,
	&.is-active {
		background-color: $button-secondary-active-background-color;
		color: $button-secondary-active-color;
	}
}

// Outline versions
$button-outline-border-width: ($spacing / 4) !default;
$button-outline-box-shadow: inset 0 0 0 $button-outline-border-width $button-background-color !default;
$button-outline-hover-box-shadow: inset 0 0 0 $button-outline-border-width $button-hover-background-color !default;
$button-outline-active-box-shadow: inset 0 0 0 $button-outline-border-width $button-active-background-color !default;
$button-outline-call-to-action-box-shadow: inset 0 0 0 $button-outline-border-width $button-call-to-action-background-color !default;
$button-outline-call-to-action-hover-box-shadow: inset 0 0 0 $button-outline-border-width $button-call-to-action-hover-background-color !default;
$button-outline-call-to-action-active-box-shadow: inset 0 0 0 $button-outline-border-width $button-call-to-action-active-background-color !default;
$button-outline-primary-box-shadow: inset 0 0 0 $button-outline-border-width $button-primary-background-color !default;
$button-outline-primary-hover-box-shadow: inset 0 0 0 $button-outline-border-width $button-primary-hover-background-color !default;
$button-outline-primary-active-box-shadow: inset 0 0 0 $button-outline-border-width $button-primary-active-background-color !default;
$button-outline-secondary-box-shadow: inset 0 0 0 $button-outline-border-width $button-secondary-background-color !default;
$button-outline-secondary-hover-box-shadow: inset 0 0 0 $button-outline-border-width $button-secondary-hover-background-color !default;
$button-outline-secondary-active-box-shadow: inset 0 0 0 $button-outline-border-width $button-secondary-active-background-color !default;

.button--outline {
	background-color: transparent;
	background-image: none;
	box-shadow: $button-outline-box-shadow;
	color: $button-background-color;

	&:hover,
	&.is-hovered {
		background-color: transparent;
		background-image: none;
		box-shadow: $button-outline-hover-box-shadow;
		color: $button-hover-background-color;
	}

	&:focus:not(:hover):not(.is-hovered):not(:active):not(.is-active),
	&.is-focused:not(:hover):not(.is-hovered):not(:active):not(.is-active) {
		box-shadow: $button-focus-box-shadow, $button-outline-box-shadow;
	}

	&:active,
	&.is-active {
		background-color: transparent;
		background-image: none;
		box-shadow: $button-outline-active-box-shadow;
		color: $button-active-background-color;
		@if ($button-outset) {
			top: 0;
		}
	}

	&.button--call-to-action {
		box-shadow: $button-outline-call-to-action-box-shadow;
		color: $button-call-to-action-background-color;

		&:hover,
		&.is-hovered {
			box-shadow: $button-outline-call-to-action-hover-box-shadow;
			color: $button-call-to-action-hover-background-color;
		}

		&:focus:not(:hover):not(.is-hovered):not(:active):not(.is-active),
		&.is-focused:not(:hover):not(.is-hovered):not(:active):not(.is-active) {
			box-shadow: $button-call-to-action-focus-box-shadow, $button-outline-call-to-action-box-shadow;
		}

		&:active,
		&.is-active {
			box-shadow: $button-outline-call-to-action-active-box-shadow;
			color: $button-call-to-action-active-background-color;
		}
	}

	&.button--primary {
		box-shadow: $button-outline-primary-box-shadow;
		color: $button-primary-background-color;

		&:hover,
		&.is-hovered {
			box-shadow: $button-outline-primary-hover-box-shadow;
			color: $button-primary-hover-background-color;
		}

		&:focus:not(:hover):not(.is-hovered):not(:active):not(.is-active),
		&.is-focused:not(:hover):not(.is-hovered):not(:active):not(.is-active) {
			box-shadow: $button-primary-focus-box-shadow, $button-outline-primary-box-shadow;
		}

		&:active,
		&.is-active {
			box-shadow: $button-outline-primary-active-box-shadow;
			color: $button-primary-active-background-color;
		}
	}

	&.button--secondary {
		box-shadow: $button-outline-secondary-box-shadow;
		color: $button-secondary-background-color;

		&:hover,
		&.is-hovered {
			box-shadow: $button-outline-secondary-hover-box-shadow;
			color: $button-secondary-hover-background-color;
		}

		&:focus:not(:hover):not(.is-hovered):not(:active):not(.is-active),
		&.is-focused:not(:hover):not(.is-hovered):not(:active):not(.is-active) {
			box-shadow: $button-secondary-focus-box-shadow, $button-outline-secondary-box-shadow;
		}

		&:active,
		&.is-active {
			box-shadow: $button-outline-secondary-active-box-shadow;
			color: $button-secondary-active-background-color;
		}
	}
}

$button-90-line-height: $line-height-40 !default;
$button-90-line-height: $line-height-40 !default;
$button-90-line-height: $line-height-40 !default;
$button-90-line-height: $line-height-40 !default;

// Sizes

.button--60 {
	padding-top: floor(($control-size-60 - ($font-size-70 * $button-line-height)) / 2);
	padding-right: $spacing * 1.5;
	padding-bottom: floor(($control-size-60 - ($font-size-70 * $button-line-height)) / 2);
	padding-left: $spacing * 1.5;
	min-height: $control-size-60;
	font-size: $font-size-70;
}

.button--70 {
	padding-top: floor(($control-size-60 - ($font-size-70 * $button-line-height)) / 2);
	padding-right: $spacing * 2;
	padding-bottom: floor(($control-size-60 - ($font-size-70 * $button-line-height)) / 2);
	padding-left: $spacing * 2;
	min-height: $control-size-70;
	font-size: $font-size-70;
}

.button--80 {
	padding-top: floor(($control-size-60 - ($font-size-80 * $button-line-height)) / 2);
	padding-right: $spacing * 2;
	padding-bottom: floor(($control-size-60 - ($font-size-80 * $button-line-height)) / 2);
	padding-left: $spacing * 2;
	min-height: $control-size-80;
	font-size: $font-size-80;
}

.button--90 {
	padding-top: floor(($control-size-60 - ($font-size-90 * $button-line-height)) / 2);
	padding-right: $spacing * 2.5;
	padding-bottom: floor(($control-size-60 - ($font-size-90 * $button-line-height)) / 2);
	padding-left: $spacing * 2.5;
	min-height: $control-size-90;
	font-size: $font-size-90;
}

.button--200 {
	padding-top: floor(($control-size-60 - ($font-size-200 * $button-line-height)) / 2);
	padding-right: $spacing * 4;
	padding-bottom: floor(($control-size-60 - ($font-size-200 * $button-line-height)) / 2);
	padding-left: $spacing * 4;
	min-height: $control-size-200;
	font-size: $font-size-200;
}

.button--full {
	display: block;
	max-width: 100%;
	width: 100%;
}
