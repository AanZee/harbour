// TODO: move to colors?
$highlight-color-monokai-dark-gray: #2c292d;
$highlight-color-monokai-light-gray: #949076;
$highlight-color-monokai-white: #f8f8f2;
$highlight-color-monokai-magenta: #f94e8a;
$highlight-color-monokai-green: #a6e22e;
$highlight-color-monokai-yellow: #e6db74;
$highlight-color-monokai-orange: #fc9867;
$highlight-color-monokai-purple: #ae81ff;
$highlight-color-monokai-blue: #57abe6;
$highlight-color-monokai-cyan: #66d9ef;

$content-a-border: ($spacing / 8) solid; // NOTE: No color is set to inherit the color of its parent

$content-highlight-background-color: $highlight-color-monokai-dark-gray;
$content-highlight-color: $highlight-color-monokai-white;

.content {

	& > :first-child {
		margin-top: 0;
	}

	& > :last-child {
		margin-bottom: 0;
	}
}

.content--diap {
	color: $color-text-diap;
}

h1 {

	.content & {
		font-weight: 600;
		line-height: $line-height-30;

		@include media(0, $range-palm) {
			font-size: $font-size-400;
		}
		@include media($range-hand) {
			font-size: $font-size-500;
		}
		@include media($range-lap, false) {
			font-size: $font-size-600;
		}
	}
}

h2 {

	.content & {
		font-weight: 600;
		line-height: $line-height-40;

		@include media(0, $range-palm) {
			font-size: $font-size-300;
		}
		@include media($range-hand) {
			font-size: $font-size-400;
		}
		@include media($range-lap, false) {
			font-size: $font-size-500;
		}
	}
}

h3 {

	.content & {
		font-weight: 600;
		line-height: $line-height-50;

		@include media(0, $range-palm) {
			font-size: $font-size-200;
		}
		@include media($range-hand) {
			font-size: $font-size-300;
		}
		@include media($range-lap, false) {
			font-size: $font-size-400;
		}
	}
}

h4 {

	.content & {
		font-weight: 600;
		line-height: $line-height-50;

		@include media(0, $range-palm) {
			font-size: $font-size-100;
		}
		@include media($range-hand) {
			font-size: $font-size-200;
		}
		@include media($range-lap, false) {
			font-size: $font-size-300;
		}
	}
}

h5 {

	.content & {
		font-weight: 600;
		line-height: $line-height-50;

		@include media(0, $range-hand) {
			font-size: $font-size-100;
		}
		@include media($range-lap, false) {
			font-size: $font-size-200;
		}
	}
}

h6 {

	.content & {
		font-weight: normal;
		line-height: $line-height-50;

		@include media(0, $range-hand) {
			font-size: $font-size-100;
		}
		@include media($range-lap, false) {
			font-size: $font-size-200;
		}
	}
}

p {

	.content & {
		max-width: 40em;
		line-height: $line-height-100;

		@include media(0, $range-hand) {
			margin-top: $line-height-80 * $font-size-100;
			margin-bottom: $line-height-80 * $font-size-100;
			font-size: $font-size-100;
		}
		@include media($range-lap, false) {
			margin-top: $line-height-80 * $font-size-200;
			margin-bottom: $line-height-80 * $font-size-200;
			font-size: $font-size-200;
		}
	}

	.content--90 & {

		@include media(0, $range-hand) {
			margin-top: $line-height-80 * $font-size-90;
			margin-bottom: $line-height-80 * $font-size-90;
			font-size: $font-size-90;
		}
		@include media($range-lap, false) {
			margin-top: $line-height-80 * $font-size-100;
			margin-bottom: $line-height-80 * $font-size-100;
			font-size: $font-size-100;
		}
	}
}

ol,
ul {

	.content & {
		max-width: 40em;
		line-height: $line-height-100;

		@include media(0, $range-hand) {
			margin-top: $line-height-80 * $font-size-100;
			margin-bottom: $line-height-80 * $font-size-100;
			padding-left: $line-height-80 * $font-size-100;
			font-size: $font-size-100;
		}
		@include media($range-lap, false) {
			margin-top: $line-height-80 * $font-size-200;
			margin-bottom: $line-height-80 * $font-size-200;
			padding-left: $line-height-80 * $font-size-200;
			font-size: $font-size-200;
		}
	}

	.content--90 & {

		@include media(0, $range-hand) {
			font-size: $font-size-90;
		}
		@include media($range-lap, false) {
			font-size: $font-size-100;
		}
	}
}

ol {

	.content & {
		list-style: decimal;
	}
}

ul {

	.content & {
		list-style: disc;
	}
}

a {

	.content & {

		&:not(.button) {
			border-bottom: $content-a-border;
		}
	}
}

strong {

	.content & {
		font-weight: bold;
	}
}

em {

	.content & {
		font-style: italic;
	}
}

code,
pre,
kbd {

	.content & {
		font-family: $font-family-monospace;
		font-size: $font-size-90;
	}
}

figure.highlight,
div.highlight {
	// NOTE: example and markdown code blocks have a different structure. Markdown codeblocks get two nested elements both with the .highlight class.
	overflow-x: scroll;
	background-color: $content-highlight-background-color;
	color: $content-highlight-color;

	.content & {
		@include media(0, $range-palm) {
			margin-bottom: $spacing * 2;
		}
		@include media($range-hand) {
			margin-bottom: $spacing * 3;
		}
		@include media($range-lap) {
			margin-bottom: $spacing * 4;
		}
		@include media($range-desk, false) {
			margin-bottom: $spacing * 5;
		}
	}
}

pre {

	.content & {
		padding: $spacing * 2;
	}
}

code {

	.highlight & {

		.hll {
			// Highlighted
			background-color: $highlight-color-monokai-light-gray;
		}

		.c {
			// Comment
			color: $highlight-color-monokai-light-gray;
		}

		.err {
			// Error
			background-color: $highlight-color-monokai-light-gray;
			color: $highlight-color-monokai-magenta;
		}

		.k {
			// Keyword
			color: $highlight-color-monokai-white;
		}

		.l {
			// Literal
			color: $highlight-color-monokai-purple;
		}

		.n {
			// Name
			color: $highlight-color-monokai-white;
		}

		.o {
			// Operator
			color: $highlight-color-monokai-magenta;
		}

		.p {
			// Punctuation
			color: $highlight-color-monokai-white;
		}

		.ch {
			// Comment.Hashbang
			color: $highlight-color-monokai-light-gray;
		}

		.cm {
			// Comment.Multiline
			color: $highlight-color-monokai-light-gray;
		}

		.cp {
			// Comment.Preproc
			color: $highlight-color-monokai-light-gray;
		}

		.cpf {
			// Comment.PreprocFile
			color: $highlight-color-monokai-light-gray;
		}

		.c1 {
			// Comment.Single
			color: $highlight-color-monokai-light-gray;
		}

		.cs {
			// Comment.Special
			color: $highlight-color-monokai-light-gray;
		}

		.gd {
			// Generic.Deleted
			color: $highlight-color-monokai-magenta;
		}

		.ge {
			// Generic.Emph
			font-style: italic;
		}

		.gi {
			// Generic.Inserted
			color: $highlight-color-monokai-green;
		}

		.gs {
			// Generic.Strong
			font-weight: bold;
		}

		.gu {
			// Generic.Subheading
			color: $highlight-color-monokai-light-gray;
		}

		.kc {
			// Keyword.Constant
			color: $highlight-color-monokai-purple;
		}

		.kd {
			// Keyword.Declaration
			color: $highlight-color-monokai-cyan;
		}

		.kn {
			// Keyword.Namespace
			color: $highlight-color-monokai-magenta;
		}

		.kp {
			// Keyword.Pseudo
			color: $highlight-color-monokai-cyan;
		}

		.kr {
			// Keyword.Reserved
			color: $highlight-color-monokai-cyan;
		}

		.kt {
			// Keyword.Type
			color: $highlight-color-monokai-cyan;
		}

		.ld {
			// Literal.Date
			color: $highlight-color-monokai-yellow;
		}

		.m {
			// Literal.Number
			color: $highlight-color-monokai-purple;
		}

		.s {
			// Literal.String
			color: $highlight-color-monokai-yellow;
		}

		.na {
			// Name.Attribute
			color: $highlight-color-monokai-green;
		}

		.nb {
			// Name.Builtin
			color: $highlight-color-monokai-cyan;
		}

		.nc {
			// Name.Class
			color: $highlight-color-monokai-green;
		}

		.no {
			// Name.Constant
			color: $highlight-color-monokai-cyan;
		}

		.nd {
			// Name.Decorator
			color: $highlight-color-monokai-green;
		}

		.ni {
			// Name.Entity
			color: $highlight-color-monokai-white;
		}

		.ne {
			// Name.Exception
			color: $highlight-color-monokai-green;
		}

		.nf {
			// Name.Function
			color: $highlight-color-monokai-green;
		}

		.nl {
			// Name.Label
			color: $highlight-color-monokai-blue;
		}

		.nn {
			// Name.Namespace
			color: $highlight-color-monokai-white;
		}

		.nx {
			// Name.Other
			color: $highlight-color-monokai-green;
		}

		.py {
			// Name.Property
			color: $highlight-color-monokai-white;
		}

		.nt {
			// Name.Tag
			color: $highlight-color-monokai-magenta;
		}

		.nv {
			// Name.Variable
			color: $highlight-color-monokai-white;
		}

		.ow {
			// Operator.Word
			color: $highlight-color-monokai-magenta;
		}

		.w {
			// Text.Whitespace
			color: $highlight-color-monokai-white;
		}

		.mb {
			// Literal.Number.Bin
			color: $highlight-color-monokai-purple;
		}

		.mf {
			// Literal.Number.Float
			color: $highlight-color-monokai-purple;
		}

		.mh {
			// Literal.Number.Hex
			color: $highlight-color-monokai-purple;
		}

		.mi {
			// Literal.Number.Integer
			color: $highlight-color-monokai-purple;
		}

		.mo {
			// Literal.Number.Oct
			color: $highlight-color-monokai-purple;
		}

		.sa {
			// Literal.String.Affix
			color: $highlight-color-monokai-yellow;
		}

		.sb {
			// Literal.String.Backtick
			color: $highlight-color-monokai-yellow;
		}

		.sc {
			// Literal.String.Char
			color: $highlight-color-monokai-yellow;
		}

		.dl {
			// Literal.String.Delimiter
			color: $highlight-color-monokai-yellow;
		}

		.sd {
			// Literal.String.Doc
			color: $highlight-color-monokai-yellow;
		}

		.s2 {
			// Literal.String.Double
			color: $highlight-color-monokai-yellow;
		}

		.se {
			// Literal.String.Escape
			color: $highlight-color-monokai-purple;
		}

		.sh {
			// Literal.String.Heredoc
			color: $highlight-color-monokai-yellow;
		}

		.si {
			// Literal.String.Interpol
			color: $highlight-color-monokai-yellow;
		}

		.sx {
			// Literal.String.Other
			color: $highlight-color-monokai-yellow;
		}

		.sr {
			// Literal.String.Regex
			color: $highlight-color-monokai-yellow;
		}

		.s1 {
			// Literal.String.Single
			color: $highlight-color-monokai-yellow;
		}

		.ss {
			// Literal.String.Symbol
			color: $highlight-color-monokai-yellow;
		}

		.bp {
			// Name.Builtin.Pseudo
			color: $highlight-color-monokai-white;
		}

		.fm {
			// Name.Function.Magic
			color: $highlight-color-monokai-green;
		}

		.vc {
			// Name.Variable.Class
			color: $highlight-color-monokai-white;
		}

		.vg {
			// Name.Variable.Global
			color: $highlight-color-monokai-white;
		}

		.vi {
			// Name.Variable.Instance
			color: $highlight-color-monokai-white;
		}

		.vm {
			// Name.Variable.Magic
			color: $highlight-color-monokai-white;
		}

		.il {
			// Literal.Number.Integer.Long
			color: $highlight-color-monokai-purple;
		}

	}
}

